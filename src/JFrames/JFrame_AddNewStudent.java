/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.time.LocalDate;
import java.time.Period;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import Connection.DatabaseConnection;
import static JFrames.Objects.con;
import static JFrames.Objects.cst;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Joshua C. Magoliman
 */
public class JFrame_AddNewStudent extends javax.swing.JFrame {

    private String imagePath, gender, combination;

    /**
     * Creates new form JFrame_AddNewStudent
     */
    public JFrame_AddNewStudent() {
        initComponents();
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();
        con = dbc.getConnection();
        SetIcon();
        Reset();
    }

    private void Reset() {
        txtLastName.setText("");
        txtGivenName.setText("");
        txtMiddleName.setText("");
        txtAge.setText("");
        txtAddress.setText("");
        radiobtnMale.setSelected(false);
        radiobtnFemale.setSelected(false);
        cmbboxMonth.setSelectedItem("Month");
        cmbboxDay.setSelectedItem("Day");
        txtYear.setText("Year");
        ImageIcon myimage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("BLANKPICTURE.png")));
        Image img1 = myimage.getImage();
        Image img2 = img1.getScaledInstance(lblProfile.getWidth(), lblProfile.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        lblProfile.setIcon(i);
        imagePath = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        lblProfile = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnBrowse = new javax.swing.JButton();
        txtLastName = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblDateOfBirth = new javax.swing.JLabel();
        radiobtnMale = new javax.swing.JRadioButton();
        lblGivenName = new javax.swing.JLabel();
        txtGivenName = new javax.swing.JTextField();
        lblMiddleName = new javax.swing.JLabel();
        txtMiddleName = new javax.swing.JTextField();
        radiobtnFemale = new javax.swing.JRadioButton();
        cmbboxMonth = new javax.swing.JComboBox<>();
        cmbboxDay = new javax.swing.JComboBox<>();
        lblAge = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnTakeAPicture = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADD NEW STUDENT");
        setResizable(false);

        jPanel.setBackground(new java.awt.Color(51, 0, 102));
        jPanel.setMaximumSize(null);
        jPanel.setPreferredSize(new java.awt.Dimension(1294, 447));
        jPanel.setRequestFocusEnabled(false);

        lblProfile.setBackground(new java.awt.Color(51, 255, 255));
        lblProfile.setOpaque(true);

        btnAdd.setText("ADD");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setText("BACK");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setDefaultCapable(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnBrowse.setText("BROWSE");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        txtLastName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLastNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastNameKeyTyped(evt);
            }
        });

        txtYear.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtYearFocusLost(evt);
            }
        });
        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtYearKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtYearKeyTyped(evt);
            }
        });

        txtAge.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });

        lblLastName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(255, 255, 255));
        lblLastName.setText("Last Name");

        lblGender.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblGender.setForeground(new java.awt.Color(255, 255, 255));
        lblGender.setText("Gender");

        lblDateOfBirth.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblDateOfBirth.setForeground(new java.awt.Color(255, 255, 255));
        lblDateOfBirth.setText("Date of Birth");

        radiobtnMale.setBackground(new java.awt.Color(51, 0, 102));
        radiobtnMale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radiobtnMale.setForeground(java.awt.Color.white);
        radiobtnMale.setText("Male");
        radiobtnMale.setFocusable(false);
        radiobtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnMaleActionPerformed(evt);
            }
        });

        lblGivenName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblGivenName.setForeground(new java.awt.Color(255, 255, 255));
        lblGivenName.setText("Given Name");

        txtGivenName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtGivenName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGivenNameKeyTyped(evt);
            }
        });

        lblMiddleName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblMiddleName.setForeground(new java.awt.Color(255, 255, 255));
        lblMiddleName.setText("Middle Name");

        txtMiddleName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtMiddleName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddleNameKeyTyped(evt);
            }
        });

        radiobtnFemale.setBackground(new java.awt.Color(51, 0, 102));
        radiobtnFemale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radiobtnFemale.setForeground(java.awt.Color.white);
        radiobtnFemale.setText("Female");
        radiobtnFemale.setFocusable(false);
        radiobtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnFemaleActionPerformed(evt);
            }
        });

        cmbboxMonth.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cmbboxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmbboxMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbboxMonthActionPerformed(evt);
            }
        });

        cmbboxDay.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cmbboxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cmbboxDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbboxDayActionPerformed(evt);
            }
        });

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblAge.setForeground(new java.awt.Color(255, 255, 255));
        lblAge.setText("Age");

        lblAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setText("Address");

        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        btnTakeAPicture.setText("TAKE A PICTURE");
        btnTakeAPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeAPictureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(471, 471, 471)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLastName)
                    .addComponent(lblGender)
                    .addComponent(lblAddress))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblGivenName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtGivenName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(radiobtnMale)
                                .addGap(18, 18, 18)
                                .addComponent(radiobtnFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblDateOfBirth)
                                .addGap(18, 18, 18)
                                .addComponent(cmbboxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbboxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(lblAge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(lblMiddleName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTakeAPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap(143, Short.MAX_VALUE)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastName)
                            .addComponent(txtGivenName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGivenName)
                            .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMiddleName))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender)
                            .addComponent(radiobtnMale)
                            .addComponent(radiobtnFemale)
                            .addComponent(lblDateOfBirth)
                            .addComponent(cmbboxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbboxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBrowse)
                            .addComponent(btnTakeAPicture))))
                .addGap(11, 11, 11)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void ComputingAge() {
        try {
            String monthValue = (String) cmbboxMonth.getSelectedItem();
            String dayValue = (String) cmbboxDay.getSelectedItem();
            String yearValue = txtYear.getText();
            String converting = monthValue;
            switch (converting) {
                case ("January"):
                    converting = "01";
                    break;
                case ("February"):
                    converting = "02";
                    break;
                case ("March"):
                    converting = "03";
                    break;
                case ("April"):
                    converting = "04";
                    break;
                case ("May"):
                    converting = "05";
                    break;
                case ("June"):
                    converting = "06";
                    break;
                case ("July"):
                    converting = "07";
                    break;
                case ("August"):
                    converting = "08";
                    break;
                case ("September"):
                    converting = "09";
                    break;
                case ("October"):
                    converting = "10";
                    break;
                case ("November"):
                    converting = "11";
                    break;
                case ("December"):
                    converting = "12";
                    break;
            }
            int day = Integer.parseInt(dayValue);
            int month = Integer.parseInt(converting);
            int year = Integer.parseInt(yearValue);
            LocalDate selectedDate = LocalDate.of(year, month, day);
            LocalDate currentDate = LocalDate.now();
            int resultYear = Period.between(selectedDate, currentDate).getYears();
            txtAge.setText("" + resultYear);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (txtLastName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Last Name Found!", "ATTENTIOM", JOptionPane.ERROR_MESSAGE);
            txtLastName.requestFocus();
        } else if (txtGivenName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Given Name Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtGivenName.requestFocus();
        } else if (txtMiddleName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Middle Name Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtMiddleName.requestFocus();
        } else if (radiobtnMale.isSelected() == false && radiobtnFemale.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "No Gender Found!", "ATTENTIOM", JOptionPane.ERROR_MESSAGE);
        } else if (cmbboxMonth.getSelectedItem().equals("Month")) {
            JOptionPane.showMessageDialog(this, "No Month Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            cmbboxMonth.requestFocus();
        } else if (cmbboxDay.getSelectedItem().equals("Day")) {
            JOptionPane.showMessageDialog(this, "No Day Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            cmbboxDay.requestFocus();
        } else if (txtYear.getText().equals("Year")) {
            JOptionPane.showMessageDialog(this, "No Year Found!", "ATTENTIOM", JOptionPane.ERROR_MESSAGE);
            txtYear.requestFocus();
        } else if (txtAge.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Age Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtAge.requestFocus();
        } else if (txtAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Address Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocus();
        } else {
            try {
                String month = (String) cmbboxMonth.getSelectedItem();
                String day = cmbboxDay.getSelectedItem().toString();
                String year = txtYear.getText();
                combination = year + "-" + month + "-" + day;
                if (imagePath != null) {
                    DateFormat pattern = new SimpleDateFormat("yyyy-MMMM-dd");
                    Date myDate = pattern.parse(combination);
                    java.sql.Date converted = new java.sql.Date(myDate.getTime());
                    cst = con.prepareCall("{call sp_InsertNewStudent(?, ?, ?, ?, ?, ?, ?, ?)}");
                    cst.setString(1, txtLastName.getText());
                    cst.setString(2, txtGivenName.getText());
                    cst.setString(3, txtMiddleName.getText());
                    cst.setString(4, gender);
                    cst.setDate(5, converted);
                    cst.setString(6, txtAge.getText());
                    cst.setString(7, txtAddress.getText());
                    InputStream inputStream = new FileInputStream(new File(imagePath));
                    cst.setBlob(8, inputStream);
                    if (cst.executeUpdate() == 1) {
                        JOptionPane.showMessageDialog(this, "Successfully Added!", "ATTENTION", JOptionPane.INFORMATION_MESSAGE);
                        Reset();
                        btnBack.setText("BACK");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No Photo Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
                    btnBrowseClicked();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if (btnBack.getText().equals("BACK")) {
            this.hide();
            JFrame_Students nextForm = new JFrame_Students();
            nextForm.show();
        } else {
            try {
                int P = JOptionPane.showConfirmDialog(null, " Are you sure want to cancel ?", "ATTENTION", JOptionPane.YES_NO_OPTION);
                if (P == JOptionPane.YES_OPTION) //(P==0) //YES FOR 0 NO FOR 1
                {
                    this.hide();
                    JFrame_Students nextForm = new JFrame_Students();
                    nextForm.show();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed
    private ImageIcon ResizeImage(String imagePath, byte[] pic) {
        ImageIcon myImage = null;
        if (imagePath != null) {
            myImage = new ImageIcon(imagePath);
        } else {
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(lblProfile.getWidth(), lblProfile.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        btnBrowseClicked();
    }//GEN-LAST:event_btnBrowseActionPerformed
    private void btnBrowseClicked() {
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.image", "jpg", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lblProfile.setIcon(ResizeImage(path, null));
            imagePath = path;
        } else {
            System.out.println("No File Selected");
        }
    }
    private void txtLastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyTyped
        if (txtLastName.getText().length() >= 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtLastNameKeyTyped
    private void txtYearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtYear.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_txtYearKeyTyped
    private void txtLastNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyReleased
        if (!txtLastName.getText().equals("")) {
            btnBack.setText("CANCEL");
        } else {
            btnBack.setText("BACK");
        }
    }//GEN-LAST:event_txtLastNameKeyReleased
    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtAge.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAgeKeyTyped
    private void radiobtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobtnMaleActionPerformed
        gender = "1";
        if (radiobtnMale.isSelected() == true) {
            radiobtnFemale.setSelected(false);
        }
    }//GEN-LAST:event_radiobtnMaleActionPerformed
    private void radiobtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobtnFemaleActionPerformed
        gender = "2";
        if (radiobtnFemale.isSelected() == true) {
            radiobtnMale.setSelected(false);
        }
    }//GEN-LAST:event_radiobtnFemaleActionPerformed
    private void txtYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYearFocusLost
        if (txtYear.getText().equals("")) {
            txtYear.setText("Year");
            txtAge.setText("");
        }
    }//GEN-LAST:event_txtYearFocusLost
    private void txtYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYearFocusGained
        if (txtYear.getText().equals("Year")) {
            txtYear.setText("");
        }
    }//GEN-LAST:event_txtYearFocusGained
    private void btnTakeAPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeAPictureActionPerformed
        JFrame frame = this;
        frame.setEnabled(false);
        JFrame_Camera nextForm = new JFrame_Camera();
        nextForm.setVisible(true);
        nextForm.setLocationRelativeTo(this);
        nextForm.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                frame.setEnabled(true);
                ;
            }
        });
    }//GEN-LAST:event_btnTakeAPictureActionPerformed
    private void txtYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyReleased
        if (this.txtYear.getText().equals("")) {
            txtAge.setText("");
        } else {
            ComputingAge();
        }
    }//GEN-LAST:event_txtYearKeyReleased
    private void cmbboxMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbboxMonthActionPerformed
        ComputingAge();
    }//GEN-LAST:event_cmbboxMonthActionPerformed
    private void cmbboxDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbboxDayActionPerformed
        ComputingAge();
    }//GEN-LAST:event_cmbboxDayActionPerformed
    private void txtGivenNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGivenNameKeyTyped
        if (txtGivenName.getText().length() >= 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtGivenNameKeyTyped
    private void txtMiddleNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddleNameKeyTyped
        if (txtMiddleName.getText().length() >= 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtMiddleNameKeyTyped
    private void SetIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LOGOICON.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_AddNewStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnTakeAPicture;
    private javax.swing.JComboBox<String> cmbboxDay;
    private javax.swing.JComboBox<String> cmbboxMonth;
    private javax.swing.JPanel jPanel;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGivenName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    public javax.swing.JLabel lblProfile;
    private javax.swing.JRadioButton radiobtnFemale;
    private javax.swing.JRadioButton radiobtnMale;
    public javax.swing.JTextField txtAddress;
    public javax.swing.JTextField txtAge;
    public javax.swing.JTextField txtGivenName;
    public javax.swing.JTextField txtLastName;
    public javax.swing.JTextField txtMiddleName;
    public javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
